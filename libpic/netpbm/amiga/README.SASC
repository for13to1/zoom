SAS/C SMakefiles for SAS/C 6.0 and greater have been created by Robert A. Knop
Jr. (rknop@cco.caltech.edu).  These Makefiles have been tested with SAS/C
6.51.  They are based on the 7dec1993 release of netpbm.

See also README.AMIGA for DICE, Amiga binary, and Amiga general information
from Ingo Wilken.

The following files are specific to SAS/C SMakefiles:

SMakefile           - Top level makefile, runs SMakefiles in pbm, pgm, ppm, pnm
SCOPTIONS           - SAS/C options file
foreach_amiga.lha   - Amiga Shell utility needed in the SMakefiles
pbm/SMakefile       - make file for pbm, run by top level SMAkefile
pbm/SCOPTIONS       - should be same as top level SCOPTIONS
pgm/SMakefile       - make file for pgm, run by top level SMAkefile
pgm/SCOPTIONS       - should be same as top level SCOPTIONS
ppm/SMakefile       - make file for ppm, run by top level SMAkefile
ppm/SCOPTIONS       - should be same as top level SCOPTIONS
pnm/SMakefile       - make file for pnm, run by top level SMAkefile
pnm/SCOPTIONS       - should be same as top level SCOPTIONS

The shell script stamp-date.amiga by Ingo Wilken is used by the SAS/C Amiga
SMakefile.

To build netpbm with SAS/C:

(1) Decompact the netpbm source archive (presumably you've already done this
if you are reading this file).  The top level directory should have, among
others, subdirectories "pbm", "pgm", "ppm", and "pnm".  CD to this top level
directory.

(2) Install foreach somewhere in your path, e.g. c:

(3) In the top level directory, type "smake".  This will build all of the
binaries.

(4) Edit the top-level SMakefile, changing the definition of the variables
INSTALLBINARIES, INSTALLMANUALS1, INSTALLMANUALS3, and INSTALLMANUALS5 to
reflect where on your system you want the executables and man pages to go.

(5) In the top level directory, type "smake install".  This will copy the
executables to $(INSTALLBINARIES) and the man pages to $(INSTALLMANUALS?).

(6) In the top level directory, type "smake clean".  This will delete the
copies of the executables from the source tree, the .o object files, and other
chaff.

-R. Knop 93/01/26